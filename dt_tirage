create or replace dynamic table DATATABLES_PROD.PATRIMOINE_CLASSE1.DT_TIRAGE
lag = 'DOWNSTREAM'
warehouse = TRANSFORMATION_XS_WH
as

    with tirage_sans_ref_premier_abo as (
    
    select
    
     a.code_client
    ,a.no_parution
    ,i.datpar as date_parution
    ,a.ref_abonnement
    ,a.ref_ancien_abo
    ,a.reabonnement01
    ,case when coalesce(a.ref_ancien_abo,0) != 0 and coalesce(a.origine_reabonnement,'') != '' then 'REABO' else 'ABO' end as type_abo_reabo
    ,a.origine_reabonnement
    ,c.origine_abo
    ,c.duree_abonnement
    ,a.paygrt
    ,a.paygcpgrt
    ,a.nb_exemplaires
    ,a.date_debut
    ,a.pns
    ,a.pnl
    ,a.dnl
    ,a.dns
    ,a.pu_ht
    ,a.pu_ttc
    ,a.pu_numero_ht
    ,a.pu_numero_ttc
    ,a.montant_ht
    ,a.montant_ttc
    ,rmp.groupe_mode_paiement
    ,case when g.mode_paiement = 'CB STRIPE' then 'CB prélèvement' when rmp.groupe_mode_paiement in ('SEPA','Collecteurs DL','Collecteurs DD') then rmp.groupe_mode_paiement else 'Cash direct' end as groupe_mode_paiement_tableau
    ,g.mode_paiement
    ,a.ref_facture
    ,case when split_part(trim(c.code_tarif),'-',7) in ('COU', 'TTA', 'VIA', 'DYN', 'EDI', 'NOR', 'LIB', 'INF', 'CAR')
          or split_part(trim(c.code_tarif),'-',9) in ('COU', 'TTA', 'VIA', 'DYN', 'EDI', 'NOR', 'LIB', 'INF', 'CAR')
          or c.code_tarif in ('INT-FR-290-1-DL-0', 'INT-FR-230-1-DL-0') then true else false end as collecteur
    ,case when split_part(trim(c.code_tarif),'-',7) = 'COU' or split_part(trim(c.code_tarif),'-',9) = 'COU' then true else false end as collaborateur
    ,c.code_tarif
    ,c.type_tarif
    ,c.tarif_adl
    ,c.tarif_preleve
    ,c.typprellbl
    ,c.desi_tarif
    ,c.famille_tarif
    ,c.type_duree
    ,a.a_servir
    ,a.fidelite
    ,a.obsolete
    ,date(a.creation) as date_creation
    ,date(a.modification) as date_modification
    ,case when coalesce(b.type_adresse,0) != 0 then 'GENERAL' else m.format_label end as mode_envoi
    ,b.cp
    ,b.ville
    ,b.deptorpays
    ,b.code_dept
    ,b.nom_dept
    ,b.nom_region
    ,b.nom_pays
    ,b.iso3166_1_a2
    ,b.fm_dt_et
    ,b.type_adresse
    ,b.societe
    ,b.npai
    ,d.titre_abrege
    ,i.datpar as date_parution_pns 
    ,j.datpar as date_parution_dnl 
    ,k.datpar as date_parution_dns
    ,e.cs_value
    ,ca.lib_alpha as lib_age_prenom
    ,cb.lib_alpha as lib_code_ecole
    ,cc.lib_alpha as lib_code_genre_prenom
    ,cd.lib_alpha as lib_environnement_social
    ,ce.lib_alpha as lib_score
    ,cf.lib_alpha as lib_source
    ,cg.lib_alpha as lib_taille_unite_urbaine
    ,ch.lib_alpha as lib_type_commune
    ,ci.lib_alpha as lib_type_habitat
    ,cj.lib_alpha as lib_type_partenaire
    ,m.format_label
    ,m.lib_version
    ,a.code_relance
    ,pr.famille as famille_relance
    ,pr.groupe_famille as groupe_famille_relance
    ,roa.origine as origine_ref_origine_abonnement
    ,roa.lib_origine as lib_origine_ref_origine_abonnement
    ,roa.qte_envoi as qte_envoi_ref_origine_abonnement
    ,roa.type_origine as type_origine_ref_origine_abonnement
    ,roa.rattachement as rattachement_ref_origine_abonnement
    ,roa.code_campagne as code_campagne_ref_origine_abonnement
    ,roa.campagne as campagne_ref_origine_abonnement
    ,roa.lot as lot_ref_origine_abonnement
    ,roa.libelle_lot as libelle_lot_ref_origine_abonnement
    ,roa.fichier as fichier_ref_origine_abonnement
    ,roa.segment as segment_ref_origine_abonnement
    ,roa.numero_segment as numero_segment_ref_origine_abonnement
    ,roa.canal as canal_ref_origine_abonnement
    ,roa.s_canal as s_canal_ref_origine_abonnement
    ,roa.groupe_canaux as groupe_canaux_origine_abonnement			
    ,roa2.origine as origine_ref_origine_reabonnement
    ,roa2.lib_origine as lib_origine_ref_origine_reabonnement
    ,roa2.qte_envoi as qte_envoi_ref_origine_reabonnement
    ,roa2.type_origine as type_origine_ref_origine_reabonnement
    ,roa2.rattachement as rattachement_ref_origine_reabonnement
    ,roa2.code_campagne as code_campagne_ref_origine_reabonnement
    ,roa2.campagne as campagne_ref_origine_reabonnement
    ,roa2.lot as lot_ref_origine_reabonnement
    ,roa2.libelle_lot as libelle_lot_ref_origine_reabonnement
    ,roa2.fichier as fichier_ref_origine_reabonnement
    ,roa2.segment as segment_ref_origine_reabonnement
    ,roa2.numero_segment as numero_segment_ref_origine_reabonnement
    ,roa2.canal as canal_ref_origine_reabonnement
    ,roa2.s_canal as s_canal_ref_origine_reabonnement
    ,roa2.groupe_canaux as groupe_canaux_origine_reabonnement
    
    ,split_part(trim(code_tarif), '-', 1) as formule_type_abonnement
    ,split_part(split_part(trim(code_tarif), '-', 2), '-', -1) as formule_zone_geographique
    ,split_part(split_part(trim(code_tarif), '-', 3), '-', -1) as formule_montant_abonnement
    ,split_part(split_part(trim(code_tarif), '-', 4), '-', -1) as formule_duree_abonnement
    ,split_part(split_part(trim(code_tarif), '-', 5), '-', -1) as formule_type_duree
    ,split_part(split_part(trim(code_tarif), '-', 6), '-', -1) as formule_mode_paiement
    ,case when coalesce(formule_montant_abonnement,0) != 0 and not(upper(code_tarif) like any ('%PAR%','%TG7%')) and not (g.mode_paiement in ('POINT DEV','PARTENAIRES','DC','POINT COM') or g.mode_paiement is null) then 1 else 0 end as abo_paye_ind
    ,case when g.mode_paiement = 'POINT DEV' then 1 else 0 end abo_grande_ecole
    ,case when coalesce(g.mode_paiement,'') in ('PARTENAIRES','DC') or upper(code_tarif) like any ('%PAR%','%TG7%') then 1 else 0 end as abo_partenaires
    ,case when coalesce(g.mode_paiement,'') = 'POINT COM' or coalesce(lib_version,'') = 'I80' then 1 else 0 end as abo_point_com
    ,case when formule_montant_abonnement = 0 and formule_montant_abonnement is not null then 1 else 0 end as abo_gratuit
    ,case when coalesce(upper(paygcpgrt),'') = 'GRÂCE COPIE' then 1 else 0 end as abo_grace_copie 
    
    from rawdata_prod.bi_aboweb.f_histo_abonnements_en_activite a 
    
    inner join rawdata_prod.bi_aboweb.d_histo_adresseslivrees b on a.code_client = b.code_client and a.no_parution = b.no_parution and a.ref_titre = b.ref_titre_livre   
    inner join rawdata_prod.bi_aboweb.t_titres d on a.ref_titre = d.ref_titre 
    inner join rawdata_prod.bi_aboweb.d_calendrierspns i on a.keypns = i.keypns 
    inner join rawdata_prod.bi_aboweb.d_calendriersdnl j on a.keydnl = j.keydnl 
    inner join rawdata_prod.bi_aboweb.d_calendriersdns k on a.keydns = k.keydns 
    inner join rawdata_prod.bi_aboweb.d_calendrierspns l on l.keypns = concat(a.pnl, '01')  
    inner join rawdata_prod.bi_aboweb.t_param_cs_1 pa on pa.libelle_cs = 'Age Prénom'
    inner join rawdata_prod.bi_aboweb.t_param_cs_1 pb on pb.libelle_cs = 'Code Ecole'
    inner join rawdata_prod.bi_aboweb.t_param_cs_1 pc on pc.libelle_cs = 'Code Genre Prénom'
    inner join rawdata_prod.bi_aboweb.t_param_cs_1 pd on pd.libelle_cs = 'Environnement Social'
    inner join rawdata_prod.bi_aboweb.t_param_cs_1 pe on pe.libelle_cs = 'Score'
    inner join rawdata_prod.bi_aboweb.t_param_cs_1 pf on pf.libelle_cs = 'Source'
    inner join rawdata_prod.bi_aboweb.t_param_cs_1 pg on pg.libelle_cs = 'Taille unité urbaine'
    inner join rawdata_prod.bi_aboweb.t_param_cs_1 ph on ph.libelle_cs = 'Type commune'
    inner join rawdata_prod.bi_aboweb.t_param_cs_1 pi on pi.libelle_cs = 'Type habitat'
    inner join rawdata_prod.bi_aboweb.t_param_cs_1 pj on pj.libelle_cs = 'Type partenaire'
    
    
    left join rawdata_prod.bi_aboweb.d_referencesorigine e on a.cs10 = e.cs_value 
    left join rawdata_prod.bi_aboweb.d_canalpaiement g on a.ref_abonnement = g.ref_abonnement  
    left join rawdata_prod.bi_aboweb.d_tarifsetformules c on a.ref_groupe = c.ref_tarif
    left join rawdata_prod.bi_aboweb.t_cs ca on ca.ref_cs = pa.ref_cs and ca.code_client = a.code_client
    left join rawdata_prod.bi_aboweb.t_cs cb on cb.ref_cs = pb.ref_cs and cb.code_client = a.code_client
    left join rawdata_prod.bi_aboweb.t_cs cc on cc.ref_cs = pc.ref_cs and cc.code_client = a.code_client
    left join rawdata_prod.bi_aboweb.t_cs cd on cd.ref_cs = pd.ref_cs and cd.code_client = a.code_client
    left join rawdata_prod.bi_aboweb.t_cs ce on ce.ref_cs = pe.ref_cs and ce.code_client = a.code_client
    left join rawdata_prod.bi_aboweb.t_cs cf on cf.ref_cs = pf.ref_cs and cf.code_client = a.code_client
    left join rawdata_prod.bi_aboweb.t_cs cg on cg.ref_cs = pg.ref_cs and cg.code_client = a.code_client
    left join rawdata_prod.bi_aboweb.t_cs ch on ch.ref_cs = ph.ref_cs and ch.code_client = a.code_client
    left join rawdata_prod.bi_aboweb.t_cs ci on ci.ref_cs = pi.ref_cs and ci.code_client = a.code_client
    left join rawdata_prod.bi_aboweb.t_cs cj on cj.ref_cs = pj.ref_cs and cj.code_client = a.code_client 
    left join rawdata_prod.bi_aboweb.d_versionsformats m on m.ref_versionformat = a.ref_versionformat 
    
    left join rawdata_prod.bi_aboweb_tableau.ref_politique_relance pr on pr.code_relance = a.code_relance
    left join rawdata_prod.bi_aboweb_tableau.ref_origine_abonnement roa on upper(e.cs_value) = roa.origine
    left join rawdata_prod.bi_aboweb_tableau.ref_origine_abonnement roa2 on upper(a.origine_reabonnement) = roa2.origine
    left join rawdata_prod.bi_aboweb_tableau.ref_regroupement_mode_paiement rmp on rmp.mode_paiement = g.mode_paiement
    
    where
        (a.ref_titre = 1 or (a.ref_titre = 2 and c.titre_maitre = d.titre_abrege and c.type_abonnement = 'NUM')) 
    qualify row_number() over (partition by a.code_client, a.no_parution order by a.ref_titre) = 1
    )    

select t_final.*
,last_value(case when categorie = 'ACQUISITION' and rang_cli = 1 and ref_ancien_abo is not null then null when categorie = 'ACQUISITION' then ref_abonnement end) ignore nulls over (partition by code_client order by no_parution rows between unbounded preceding and current row) as ref_premier_abo

from(
select 
     t.*
    ,row_number() over (partition by code_client,ref_abonnement order by no_parution) as rang_abo
    ,case when type_abo_reabo = 'ABO' then row_number() over (partition by code_client,type_abo_reabo order by no_parution) end as rang_cli
    ,case   when t.type_abo_reabo = 'ABO' and rang_abo = 1 and rang_cli = 1 and ref_ancien_abo is not null then 'STOCK'
            when t.type_abo_reabo = 'ABO' and rang_abo = 1 then 'ACQUISITION'
            when t.type_abo_reabo = 'REABO'and rang_abo = 1 then 'RENOUVELLEMENT'
            else 'STOCK' end as categorie
    ,case when categorie = 'ACQUISITION' then t.pns - lag(t.dns) over (partition by t.code_client order by t.no_parution) end as diff_par_avec_precedent_dns
    
from tirage_sans_ref_premier_abo t
)t_final
