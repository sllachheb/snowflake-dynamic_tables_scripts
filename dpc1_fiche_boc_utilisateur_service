create or replace dynamic table DATATABLES_PROD.PATRIMOINE_CLASSE1.FICHE_BOC_UTILISATEUR_SERVICE(
	COMPTE_ID_UTILISATEUR,
	COMPTE_CODE_CLIENT,
	COMPTE_ID_PARENTS,
	COMPTE_ID_ENFANTS,
	FLG_COMPTE_PRINCIPAL,
	FLG_COMPTE_ENFANT,
	COMPTE_EMAIL,
	COMPTE_STATUT,
	COMPTE_DATE_CREATION,
	COMPTE_DATE_ACTIVATION,
	COMPTE_DATE_DERNIERE_MAJ,
	COMPTE_DATE_SUPPRESSION,
	COMPTE_DATE_VALIDATION_CGU,
	COMPTE_DEUXIEME_ECRAN,
	COMPTE_CP,
	COMPTE_VILLE,
	COMPTE_PAYS,
	COMPTE_TELEPHONE,
	COMPTE_DATE_DE_NAISSANCE,
	COMPTE_PSEUDO,
	COMPTE_CIVILITE,
	COMPTE_NOM,
	COMPTE_PRENOM,
	COMPTE_ORIGINE,
	COMPTE_ORIGINE_PRECOMPTE,
	COMPTE_CLE,
	SERVICE_CODE,
	SERVICE_ID_UTILISATEUR,
	SERVICE_DATE_DEBUT,
	SERVICE_DATE_FIN,
	SERVICE_DATE_DERNIERE_MAJ,
	SERVICE_DATE_SUSPENSION,
	SERVICE_ORIGINE,
	SERVICE_STATUT,
	SERVICE_NUMERO,
	SERVICE_NOMBRE,
	SERVICE_GELE,
	PATH,
	TS_FICHE_BOC,
	TS_INGESTION
) lag = '1 day' warehouse = TRANSFORMATION_XS_WH
 as
SELECT
    COMPTE_ID_UTILISATEUR,
    COMPTE_CODE_CLIENT,
    var:parents::array as COMPTE_ID_PARENTS,
    var:enfants::array as COMPTE_ID_ENFANTS,
    CASE WHEN ARRAY_SIZE(COMPTE_ID_PARENTS) = 0 and ARRAY_SIZE(COMPTE_ID_ENFANTS) > 0 THEN 1 ELSE 0 END AS FLG_COMPTE_PRINCIPAL,
    CASE WHEN ARRAY_SIZE(COMPTE_ID_PARENTS) > 0 THEN 1 ELSE 0 END AS FLG_COMPTE_ENFANT,
    UPPER(var:utilisateur.email::string) AS COMPTE_EMAIL,
    UPPER(COALESCE(var:etat::string, '')) AS COMPTE_STATUT,
    var:utilisateur:datecreation::date AS COMPTE_DATE_CREATION,
    var:utilisateur:dateactivation::date AS COMPTE_DATE_ACTIVATION,
    var:utilisateur:dernieremaj::date AS COMPTE_DATE_DERNIERE_MAJ,
    var:utilisateur:datesuppression::date AS COMPTE_DATE_SUPPRESSION,
    var:utilisateur:datevalidationcgu::date AS COMPTE_DATE_VALIDATION_CGU,
    var:utilisateur:deuxiemeecran::string AS COMPTE_DEUXIEME_ECRAN,
    var:utilisateur:cp::string AS COMPTE_CP,
    UPPER(var:utilisateur:ville::string) AS COMPTE_VILLE,
    UPPER(var:utilisateur:pays::string) AS COMPTE_PAYS,
    var:utilisateur:telephone::string AS COMPTE_TELEPHONE,
    var:utilisateur:datedenaissance::string AS COMPTE_DATE_DE_NAISSANCE,
    UPPER(var:utilisateur:pseudo::string) AS COMPTE_PSEUDO,
    UPPER(var:utilisateur:civilite)::string AS COMPTE_CIVILITE,
    UPPER(var:utilisateur:nom::string) AS COMPTE_NOM,
    UPPER(var:utilisateur:prenom::string) AS COMPTE_PRENOM,
    var:utilisateur:origine::string AS COMPTE_ORIGINE,
    var:utilisateur:origine_precompte::string AS COMPTE_ORIGINE_PRECOMPTE,
    var:utilisateur:cle::string AS COMPTE_CLE,
    value:code::string AS SERVICE_CODE,
    IFNULL(value:idservicesuser::string, 'null') AS SERVICE_ID_UTILISATEUR,
    value:date_debut::date AS SERVICE_DATE_DEBUT,
    value:date_fin::date AS SERVICE_DATE_FIN,
    value:dernieremaj_service::date AS SERVICE_DATE_DERNIERE_MAJ,
    value:datesuspension::date AS SERVICE_DATE_SUSPENSION,
    value:origine::string AS SERVICE_ORIGINE,
    value:etat::string AS SERVICE_STATUT,
    NULLIF(value:numero::string,'null') as SERVICE_NUMERO,
    NULLIF(value:nombre::string,'null') as SERVICE_NOMBRE,
    NULLIF(value:gele::string,'null') as SERVICE_GELE,
    c.PATH,
    c.ts_fiche_boc,
    c.ts_ingestion
from (
select a.var,a.ts_ingestion,b.*
from rawdata_prod.boc.fiche_boc a
inner join rawdata_prod.boc.dt_utilisateur_active b on a.path = b.path
) c 
,LATERAL FLATTEN (input => var:service, outer => true) s
WHERE
 compte_id_utilisateur IS NOT NULL;
